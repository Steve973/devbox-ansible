---
- name: Add GPG and SSH configuration to .bashrc
  blockinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    insertbefore: "#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - GPG and SSH configuration"
    block: |
      export GPG_TTY="$(tty)"
      export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
      gpgconf --kill gpg-agent &> /dev/null
      gpg-agent --daemon --enable-ssh-support --pinentry-program=/usr/bin/pinentry-qt &> /dev/null
    state: present
    prepend_newline: true
    append_newline: true

- name: Stop gpg-agent-ssh.socket
  systemd_service:
    name: gpg-agent-ssh.socket
    state: stopped
    enabled: false
    scope: user
  ignore_errors: yes

- name: Stop gpg-agent-extra.socket
  systemd_service:
    name: gpg-agent-extra.socket
    state: stopped
    enabled: false
    scope: user
  ignore_errors: yes

- name: Stop gpg-agent-browser.socket
  systemd_service:
    name: gpg-agent-browser.socket
    state: stopped
    enabled: false
    scope: user
  ignore_errors: yes

- name: Stop gpg-agent.socket
  systemd_service:
    name: gpg-agent.socket
    state: stopped
    enabled: false
    scope: user
  ignore_errors: yes

- name: Stop gpg-agent service
  systemd_service:
    name: gpg-agent.service
    state: stopped
    enabled: false
    scope: user
  ignore_errors: yes

- name: Kill existing gpg-agent
  command: gpgconf --kill gpg-agent
  ignore_errors: yes

- name: Verify gpg-agent is running with custom configuration
  shell: ps aux | grep gpg-agent | grep -v grep
  register: gpg_agent_status
  changed_when: false
  failed_when: "'gpg-agent' in gpg_agent_status.stdout"

- name: Handle gpg-agent service stop failure
  fail:
    msg: |
      gpg-agent is running but it should be stopped.
      Current gpg-agent status:
      {{ gpg_agent_status.stdout_lines | to_nice_yaml }}
  when: gpg_agent_status is failed
